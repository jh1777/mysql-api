swagger: "2.0"
info:
  description: "MySQL API for local private Database"
  version: "1.0.0"
  title: "MySQL API"
host: "192.168.178.129"
basePath: "/api"
tags:
- name: "salary"
  description: "Gehalt / Salary API calls"
schemes:
- "http"
paths:
  /salary:
    post:
      tags:
      - "salary"
      summary: "Add a new salary entry to the database"
      description: ""
      operationId: "backend.salary.create"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Salary object that needs to be added to the db"
        required: true
        schema:
          $ref: "#/definitions/Salary"
      responses:
        "200":
          description: "successful operation"
        "405":
          description: "Invalid input"
        "500":
          description: "Server error"

    get:
      tags:
      - "salary"
      summary: "Gets all salary entries"
      description: ""
      operationId: "backend.salary.getAll"
      produces:
      - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Salary"
        "400":
          description: "Invalid status value"
        "500":
          description: "Server error"

  /salary/{id}:
    get:
      tags:
      - "salary"
      summary: "Find salary by ID"
      description: "Returns one entry for that Id"
      operationId: "backend.salary.getById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Id of Salary entry to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Salary"
        "400":
          description: "Invalid Year supplied"
        "404":
          description: "Not found"

  /salary/year/{year}:
    get:
      tags:
      - "salary"
      summary: "Find salary by year"
      description: "Returns all salary entries for that year"
      operationId: "backend.salary.getByYear"
      produces:
      - "application/json"
      parameters:
      - name: "year"
        in: "path"
        description: "Year of Salaries to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Salary"
        "400":
          description: "Invalid Year supplied"
        "404":
          description: "Not found"

definitions:
  Salary:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      Year:
        type: "integer"
        format: "int32"
      Monat:
        type: "integer"
        format: "int32"
      Netto:
        type: "number"
        multipleOf: 0.01
      Brutto:
        type: "number"
        multipleOf: 0.01
      AKP:
        type: "number"
        multipleOf: 0.01
      Kantine:
        type: "number"
        multipleOf: 0.01
      Arbeitgeber:
        type: "string"
      Wochenstunden:
        type: "integer"
        format: "int32"