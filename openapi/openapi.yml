openapi: 3.0.1
info:
  title: MySQL API
  description: MySQL API for local private Database
  version: 1.0.0
servers:
- url: http://192.168.178.129/api
tags:
- name: salary
  description: Gehalt / Salary API calls
paths:
  /expenses:
    get:
      tags:
      - expenses
      summary: Gets all expenses entries
      operationId: backend.expenses.getAll
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Expense'
        400:
          description: Invalid status value
          content: {}
        500:
          description: Server error
          content: {}
    post:
      tags:
      - expenses
      summary: Inserts expenses entries
      operationId: backend.expenses.create
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Expense'
        400:
          description: Invalid status value
          content: {}
        500:
          description: Server error
          content: {}
  /expenses/{id}:
    get:
      tags:
      - expenses
      summary: Gets one expenses entry
      operationId: backend.expenses.getId
      parameters:
      - name: id
        in: path
        description: Id of Expense entry to return
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'
        400:
          description: Invalid status value
          content: {}
        500:
          description: Server error
          content: {}
  /salary:
    get:
      tags:
      - salary
      summary: Gets all salary entries
      operationId: backend.salary.getAll
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Salary'
        400:
          description: Invalid status value
          content: {}
        500:
          description: Server error
          content: {}
    post:
      tags:
      - salary
      summary: Add a new salary entry to the database
      operationId: backend.salary.create
      requestBody:
        description: Salary object that needs to be added to the db
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Salary'
        required: true
      responses:
        204:
          description: successful operation
          content: {}
        405:
          description: Invalid input
          content: {}
        500:
          description: Server error
          content: {}
      x-codegen-request-body-name: body
  /salary/{id}:
    get:
      tags:
      - salary
      summary: Find salary by ID
      description: Returns one entry for that Id
      operationId: backend.salary.getId
      parameters:
      - name: id
        in: path
        description: Id of Salary entry to return
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Salary'
        404:
          description: Not found
          content: {}
        500:
          description: Server error
          content: {}
    delete:
      tags:
      - salary
      summary: Delete salary by ID
      description: Deletes one entry for that Id
      operationId: backend.salary.deleteId
      parameters:
      - name: id
        in: path
        description: Id of Salary entry to delete
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content: {}
        404:
          description: Not found
          content: {}
        500:
          description: Server error
          content: {}
  /salary/year/{year}:
    get:
      tags:
      - salary
      summary: Find salary by year
      description: Returns all salary entries for that year
      operationId: backend.salary.getByYear
      parameters:
      - name: year
        in: path
        description: Year of Salaries to return
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Salary'
        400:
          description: Invalid Year supplied
          content: {}
        404:
          description: Not found
          content: {}
components:
  schemas:
    Salary:
      type: object
      properties:
        id:
          type: integer
          format: int64
        Year:
          type: integer
          format: int32
        Monat:
          type: integer
          format: int32
        Netto:
          type: number
        Brutto:
          type: number
        AKP:
          type: number
        Kantine:
          type: number
        Arbeitgeber:
          type: string
        Wochenstunden:
          type: integer
          format: int32
    Expense:
      type: object
      properties:
        id:
          type: integer
          format: int64
        Name:
          type: string
        Betrag:
          type: number
        Beschreibung:
          type: string
        Intervall:
          type: string
        Kategorie:
          type: string
        Tag:
          type: string
        Start:
          type: string
        Ende:
          type: string
        Erstellt:
          type: string
        Bearbeitet:
          type: string
        Person:
          type: string
